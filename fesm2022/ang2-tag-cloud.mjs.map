{"version":3,"file":"ang2-tag-cloud.mjs","sources":["../../../projects/ang2-tag-cloud/src/lib/ang2-tag-cloud.service.ts","../../../projects/ang2-tag-cloud/src/lib/ang2-tag-cloud.component.ts","../../../projects/ang2-tag-cloud/src/lib/ang2-tag-cloud.component.html","../../../projects/ang2-tag-cloud/src/public-api.ts","../../../projects/ang2-tag-cloud/src/ang2-tag-cloud.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Ang2TagCloudService {\r\n\r\n  constructor() { }\r\n}\r\n","import { Component,Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n@Component({\r\n  selector: 'ang2-tag-cloud',\r\n  imports: [CommonModule],\r\n  templateUrl: './ang2-tag-cloud.component.html',\r\n  styleUrl: './ang2-tag-cloud.component.css'\r\n})\r\nexport class Ang2TagCloudComponent {\r\n  tagArray: any = []; \r\n  \r\n  \r\n  @Input() tag:any[] =  []\r\n  @Input() maxFontSize: number = 1;\r\n  @Input() minFontSize: number = 20;\r\n  @Input() animateTags: boolean = false;\r\n  @Input() showInCircle: boolean = true;\r\n  @Input() circleRadius: number = 100;\r\n  @Input() startPoint: number = 100;\r\n  @Output() onSelectionChane = new EventEmitter<any>();\r\n\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.processData();\r\n  }\r\n  tagSelection(id: any) {\r\n    this.onSelectionChane.emit(this.tag[id]);\r\n  }\r\n\r\n  isStringsArray(arr: any) { return arr.every((i: any) => typeof i === \"string\") }\r\n\r\n  processData() {\r\n    if (this.isStringsArray(this.tag)) {\r\n      if (this.animateTags || this.showInCircle) {\r\n        this.addAnimation(this.tag);\r\n      } else {\r\n        this.tagArray = this.tag.map((item:any) => {\r\n          return {\r\n            name: item,\r\n            size: {\r\n              \"font-size\": `${this.getRandFontSize(this.maxFontSize, this.minFontSize)}px`\r\n            }\r\n          }\r\n        })\r\n      }\r\n    } else {\r\n      if (this.animateTags || this.showInCircle) {\r\n        let o = this.tag.map((x:any) => x.name);\r\n        this.addAnimation(o);\r\n      } else {\r\n        this.tagArray = this.tag.map((obj:any) => {\r\n          return {\r\n            name: obj.name,\r\n            size: {\r\n              \"font-size\": `${this.getRandFontSize(this.maxFontSize, this.minFontSize)}px`\r\n            }\r\n          }\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  addAnimation(tag: any[]) {\r\n    let r = this.circleRadius;\r\n    let randomeNumbers = this.getRandomInt(this.tag.length);\r\n    let eee = r / this.tag.length;\r\n    let randomeRadius = new Array(this.tag.length).fill(1).map((e, index) => this.getRandFontSize((index + 1) * eee, index * eee))\r\n\r\n    this.tagArray = tag.map((item, index) => {\r\n      let theta = randomeNumbers[index] * 2 * Math.PI;\r\n      let xx = (index % 2) ? randomeRadius[index] : r;\r\n      let yy = (index % 2) ? r : randomeRadius[index];\r\n      let x = this.startPoint + xx * Math.cos(theta);\r\n      let y = this.startPoint + xx * Math.sin(theta);\r\n      let sdf = this.startPoint + r * Math.cos(theta);\r\n      let red = this.startPoint + r * Math.cos(theta - 2.76);\r\n      return {\r\n        name: item,\r\n        size: {\r\n          \"font-size\": `${this.getRandFontSize(this.maxFontSize, this.minFontSize)}px`,\r\n          left: `${x}px`,\r\n          top: `${y}px`,\r\n          position: \"absolute\",\r\n          opacity: 1\r\n        },\r\n        xMax: (sdf < red) ? red : sdf,\r\n        xMin: (sdf > red) ? red : sdf,\r\n        theta: theta,\r\n        moveRight: true\r\n      }\r\n    })\r\n  }\r\n  getRandFontSize(max: number, min: number) {\r\n    return Math.random() * (max - min) + min\r\n  }\r\n\r\n  getRandomInt(quantity: number, maxValue = 1) {\r\n    let max = maxValue;\r\n    if (maxValue == 1) {\r\n      max = quantity * 5;\r\n    }\r\n    const arr = []\r\n    let count = 0;\r\n    while (arr.length < quantity) {\r\n      ++count;\r\n      let candidateInt = (Math.random() * (max - 0) + 0);\r\n      if (maxValue == 1) {\r\n        candidateInt = candidateInt / max;\r\n      }\r\n      // if(arr.length<(max-2) && count<5){\r\n      //   let a = arr.filter(x=> x+2)\r\n      // }\r\n      if (arr.indexOf(candidateInt) === -1) arr.push(candidateInt)\r\n    }\r\n    return (arr)\r\n  }\r\n  animateStop: boolean = true;\r\n  myInterval: any = null;\r\n\r\n  moveTags(animateFlag: boolean) {\r\n    if (!this.animateTags) {\r\n      return;\r\n    }\r\n    this.animateStop = animateFlag;\r\n    this.myInterval = setInterval(() => {\r\n      if (!animateFlag) {\r\n        let jjj = [...this.tagArray];\r\n        this.tagArray = [];\r\n        this.tagArray = jjj.map((tag: any, index: number) => {\r\n          let left: string = tag.size.left;\r\n          let { moveRight } = tag;\r\n          let h = parseInt(tag.size.left.slice(0, -2));\r\n          let opacity = 1;\r\n          let ran = this.getRandFontSize(4, 0)\r\n          if (h + ran <= tag.xMax && moveRight) {\r\n            left = `${h + ran}px`;\r\n            opacity = 1;\r\n          } else {\r\n            moveRight = false;\r\n          }\r\n          if (h - ran >= tag.xMin && !moveRight) {\r\n            opacity = 0.5;\r\n            left = `${h - ran}px`;\r\n          } else {\r\n            moveRight = true;\r\n          }\r\n          // let top = `${parseInt(tag.size.top.slice(0, -2))+2}px`;\r\n          let size = { ...tag.size, ...{ left }, ...{ opacity } }\r\n          return { ...tag, ...{ size: size }, ...{ moveRight } }\r\n        })\r\n      }\r\n    }, 50);\r\n\r\n\r\n  }\r\n  stopAnimation() {\r\n    if (this.animateTags) {\r\n      this.animateStop = true;\r\n      clearInterval(this.myInterval);\r\n    }\r\n  }\r\n}\r\n","<div class=\"ang2-tag-cloud\" (mouseenter)=\"moveTags(false)\" (mouseleave)=\"stopAnimation()\">\r\n    <ul  id=\"tagcloud\" class=\"ang2-tag-cloud_list\" >\r\n      @for (tag of tagArray; let idx = $index; track tag.name) {\r\n       <li [ngStyle]=\"tag.size\">\r\n         <a \r\n         onmouseover=\"this.style.color='orange';\" onmouseout=\"this.style.color='';\"\r\n         (click)=\"tagSelection(idx)\">{{tag.name}}</a> \r\n       </li>\r\n     }\r\n         </ul>\r\n  </div>","/*\r\n * Public API Surface of ang2-tag-cloud\r\n */\r\n\r\nexport * from './lib/ang2-tag-cloud.service';\r\nexport * from './lib/ang2-tag-cloud.component';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}